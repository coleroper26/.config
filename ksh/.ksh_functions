#!/bin/ksh
# Cole Roper

## Set Default PS1
function __prompt_default {
    echo -n "$(tput setaf 66)\u"    # blu   username
    echo -n "$(tput sgr0)@"
    echo -n "$(tput setaf 66)\h "   # blu   hostname
    echo -n "$(tput sgr0)| "
    echo -n "$(tput setaf 72)\W "   # aqu   current directory
    echo -n "$(tput sgr0)| "
    echo -n "$(tput setaf 106)\$ "  # grn   UID
    echo -n "$(tput sgr0)"
}

## Set Focused PS1
function __prompt_focus {
    echo -n '| '
    echo -n "$(tput setaf 66)\u"
    echo -n "$(tput sgr0)@"
    echo -n "$(tput setaf 66)\h "
    echo -n "$(tput sgr0)| "
    echo -n "$(tput setaf 72)\w "
    echo -n "$(tput sgr0)| \n"
    echo -n "$(tput setaf 106)\$ "
    echo -n "$(tput sgr0)"
}

## Easy PS1 Expansion
function PS1.set
{
    typeset prefix remaining=${.sh.value} var= n= k=
    set -A .sh.lversion ${.sh.version}
  
    while [[ $remaining ]]
    do
        prefix=${remaining%%'\'*}
        remaining=${remaining#$prefix}
        var+="$prefix"
         
        case ${remaining:1:1} in
            A)    var+="\$(printf '%(%R)T')";;
            @)    var+="\$(printf '%(%H:%M %p)T')";;
            d)    var+="\$(printf '%(%a %b:%d)T')";;
            e)    var+="\$'\e'";;
            h)    var+=$(hostname -s);;
            H)    var+=$(hostname);;
            j)    var+="\$(jobs | wc -l)";;
            l)    var+="\$(basename \"\$(tty)\")";;
            n)    var+=$'\n';;
            r)    var+=$'\r';;
            s)    var+="\$(basename \"\$0\")";;
            t)    var+="\$(printf '%(%H:%M:%S)T')";;
            T)    var+="\$(printf '%(%I:%M:%S)T')";;
            u)    var+=$USER;;
            v)    var+="\${.sh.lversion[2]}";;
            V)    var+="\${.sh.lversion[2]} (\${.sh.lversion[1]})";;
            w)    var+="\$(pwd)";;
            W)    var+="\$(basename \"\$(pwd)\")";;
          '#')    var+=!;;
            !)    var+=!;;
          '$')    if (( $(id -u) == 0 ))
                  then
                      var+='#'
                  else
                      var+='$'
                  fi;;
          '\')    var+='\\';;
      '['|']')    ;;
        [0-7])    case ${remaining:1:3} in
                   [0-7][0-7][0-7])   k=4;;
                            [0-7][0-7])   k=3;;
                                     *)   k=2;;
                  esac
                  eval n="\$'"${remaining:0:k}"'"
                  var+=$n
                  remaining=${remaining:k}
                  continue ;;
           "")    ;;
            *)    var+='\'${remaining:0:2};;
        esac
        remaining=${remaining:2}
    done
    .sh.value=$var
}
